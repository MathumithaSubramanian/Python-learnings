# -*- coding: utf-8 -*-
"""python essentials-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OLQoSH2DpjuGwAGouhuu9swdaJVLIMvc
"""

#Using sep and end keywords in print() function

print("Programming","Essentials","in",sep="***",end="...")
print("Python")

#Write a one-line piece of code, using the print() function, as well as the newline and escape characters,
#to match the expected result outputted on three lines.

print("\"I'm\"")
print("\"\"learning\"\"")
print("\"\"\"Python\"\"\"")

#create the variables: john, mary, and adam;
#assign values to the variables. The values must be equal to the numbers of fruit possessed by John, Mary, and Adam respectively;
#having stored the numbers in the variables, print the variables on one line, and separate each of them with a comma;
#now create a new variable named total_apples equal to addition of the three former variables.
#print the value stored in total_apples to the console

john=3
mary=5
adam=6
print(john,mary,adam,sep=',')
total_apples=john+adam+mary
print("Total number of apples:" ,total_apples)

#Miles and kilometers are units of length or distance.
#Bearing in mind that 1 mile is equal to approximately 1.61 kilometers, complete the program in the editor so that it converts:
#miles to kilometers;
#kilometers to miles.

kilometers = 12.25
miles = 7.38

miles_to_kilometers = miles * 1.61
kilometers_to_miles = kilometers/1.61

print(miles, "miles is", round(miles_to_kilometers, 2), "kilometers")
print(kilometers, "kilometers is", round(kilometers_to_miles, 2), "miles")

#Basic calculations:complete the code in order to evaluate the following expression:
# formula: 3x3 - 2x2 + 3x - 1
x =  -1
x = float(x)
y=3*x**3-2*x**2+3*x-1
print("y =", y)

#becoming familiar with the inputting and outputting of data in Python;
#evaluating simple expressions.

a = float(input("Enter first value: "))
b = float(input("Enter second value: "))

print("Add",a+b)
print("Sub",a-b)
print("Mul",a*b)
print("Div",a/b)

print("\nThat's all, folks!")

# familiar with the concept of numbers, operators and arithmetic operations in Python;
#understanding the precedence and associativity of Python operators, as well as the proper use of parentheses.

x = float(input("Enter value for x: "))
y=1/(x+1/(x+1/(x+1/x)))
print("y =", y)

#Your task is to prepare a simple code able to evaluate the end time of a period of time, 
#given as a number of minutes (it could be arbitrarily large). The start time is given as a pair of hours (0..23) and minutes (0..59). 
#For example, if an event starts at 12:17 and lasts 59 minutes, it will end at 13:16.

hour = int(input("Starting time (hours): "))
mins = int(input("Starting time (minutes): "))
dura = int(input("Event duration (minutes): "))
x=(hour+(mins+dura)//60)%24
y=(mins+dura)%60
print(x,y,sep=':')

#Using one of the comparison operators in Python, write a simple two-line program that takes the parameter n as input, 
#which is an integer, and prints False if n is less than 100, and True if n is greater than or equal to 100.

n=int(input())
if n<100:
    print("False")
elif n>=100:
    print("True")

#Write a program that utilizes the concept of conditional execution
lily=str(input())
if lily=='Spathiphyllum':
  print("Yes - Spathiphyllum is the best plant ever!")
elif lily=='spathiphyllum':
  print("No, I want a big Spathiphyllum!")
else:
  print("Spathiphyllum! Not",lily,"!")

#if-elif-else statement
year = int(input("Enter a year: "))
if year<=1580:
    print("Not within the Gregorian calendar period")
elif year%4!=0:
    print("Common year")
elif year%100!=0:
    print("Leap year")
elif year%400!=0:
    print("Common year")
else:
    print("Leap year")

#Using while loop 
secret_number = 777
num=int(input())
while num!=secret_number:
    print("Ha ha! You're stuck in my loop!")
else:
    print("Well done, muggle! You are free now.")

#for loop
import time
for i in range(1,6):
    print(i,"Mississippi")
    time.sleep(1)
print("Ready or not, here I come!")

count=0
while True:
    word=str(input())
    if word=="chupacabra":
      print(word)
      break
    count+=1

#Vowel eater
word=str(input())
user_word =word.upper()
a=['A','E','I','O','U']
for letter in user_word:
    if letter not in a:
        print(letter)

#while loop
blocks = int(input("Enter the number of blocks: "))
height = 0
in_layer = 1
while in_layer <= blocks:
   height+=1
   blocks=blocks-in_layer
   in_layer+=1

print("The height of the pyramid:", height)

#List with unique elements
my_list = [1, 2, 4, 4, 1, 4, 2, 6, 2, 9]
new_list = []
for i in my_list:
   if i not in new_list:
        new_list.append(i)
print("The list with unique elements only:")
print(new_list)

mylist=[x * x for x in range(5)]
def fun(lst):
  del lst[lst[2]]
  return lst
print(fun(mylist))

lst=[[x for x in range(3)] for y in range(3)]

for r in range(3):
  for c in range(3):
    if lst[r][c] % 2 !=0:
      print("#")